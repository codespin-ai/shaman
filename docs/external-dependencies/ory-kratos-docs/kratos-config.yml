version: v0.13.0

dsn: postgresql://kratos:secret@postgres:5432/kratos?sslmode=disable

serve:
  public:
    base_url: http://kratos:4433/
    cors:
      enabled: true
      allowed_origins:
        - http://localhost:3000
        - http://localhost:4000
        - https://*.shaman.ai
      allowed_methods:
        - POST
        - GET
        - PUT
        - PATCH
        - DELETE
      allowed_headers:
        - Authorization
        - Content-Type
        - X-Session-Token
      exposed_headers:
        - Content-Type
        - Set-Cookie
  admin:
    base_url: http://kratos:4434/

selfservice:
  default_browser_return_url: http://localhost:3000/
  allowed_return_urls:
    - http://localhost:3000
    - http://localhost:4000
    - https://*.shaman.ai

  methods:
    password:
      enabled: true
      config:
        haveibeenpwned_enabled: false
        min_password_length: 8
        identifier_similarity_check_enabled: true

    oidc:
      enabled: true
      config:
        providers:
          # Google OAuth
          - id: google
            provider: google
            client_id: "$GOOGLE_CLIENT_ID"
            client_secret: "$GOOGLE_CLIENT_SECRET"
            scope:
              - email
              - profile
            mapper_url: file:///etc/config/kratos/oidc.google.jsonnet

          # GitHub OAuth
          - id: github
            provider: github
            client_id: "$GITHUB_CLIENT_ID"
            client_secret: "$GITHUB_CLIENT_SECRET"
            scope:
              - user:email
              - read:user
            mapper_url: file:///etc/config/kratos/oidc.github.jsonnet

          # Generic OIDC for enterprise SSO
          - id: enterprise-sso
            provider: generic
            client_id: "$ENTERPRISE_CLIENT_ID"
            client_secret: "$ENTERPRISE_CLIENT_SECRET"
            issuer_url: "$ENTERPRISE_ISSUER_URL"
            scope:
              - openid
              - email
              - profile
            mapper_url: file:///etc/config/kratos/oidc.enterprise.jsonnet

  flows:
    error:
      ui_url: http://localhost:3000/error

    settings:
      ui_url: http://localhost:3000/settings
      privileged_session_max_age: 15m
      required_aal: aal1

    recovery:
      enabled: true
      ui_url: http://localhost:3000/recovery
      use: code
      lifespan: 1h

    verification:
      enabled: true
      ui_url: http://localhost:3000/verification
      use: code
      lifespan: 1h

    logout:
      after:
        default_browser_return_url: http://localhost:3000/login

    login:
      ui_url: http://localhost:3000/login
      lifespan: 10m
      after:
        default_browser_return_url: http://localhost:3000/dashboard
        hooks:
          - hook: web_hook
            config:
              url: http://shaman-server:4000/webhooks/kratos/login
              method: POST
              body: file:///etc/config/kratos/webhook.login.jsonnet
              auth:
                type: api_key
                config:
                  in: header
                  name: X-Webhook-Token
                  value: "$KRATOS_WEBHOOK_TOKEN"

    registration:
      lifespan: 10m
      ui_url: http://localhost:3000/registration
      after:
        password:
          hooks:
            - hook: session
            - hook: web_hook
              config:
                url: http://shaman-server:4000/webhooks/kratos/registration
                method: POST
                body: file:///etc/config/kratos/webhook.registration.jsonnet
                auth:
                  type: api_key
                  config:
                    in: header
                    name: X-Webhook-Token
                    value: "$KRATOS_WEBHOOK_TOKEN"
        oidc:
          hooks:
            - hook: session
            - hook: web_hook
              config:
                url: http://shaman-server:4000/webhooks/kratos/registration
                method: POST
                body: file:///etc/config/kratos/webhook.registration.jsonnet
                auth:
                  type: api_key
                  config:
                    in: header
                    name: X-Webhook-Token
                    value: "$KRATOS_WEBHOOK_TOKEN"

log:
  level: debug
  format: json
  leak_sensitive_values: false

secrets:
  cookie:
    - "$KRATOS_COOKIE_SECRET"
  cipher:
    - "$KRATOS_CIPHER_SECRET"

hashers:
  algorithm: argon2
  argon2:
    parallelism: 1
    memory: 128MB
    iterations: 2
    salt_length: 16
    key_length: 16

identity:
  default_schema_id: default
  schemas:
    - id: default
      url: file:///etc/config/kratos/identity.schema.json

courier:
  smtp:
    connection_uri: "$SMTP_CONNECTION_URI"
    from_address: noreply@shaman.ai
    from_name: Shaman

session:
  lifespan: 24h
  cookie:
    persistent: true
    name: ory_kratos_session
    same_site: Lax
    domain: .shaman.ai # Works across all subdomains
    path: /
    http_only: true
